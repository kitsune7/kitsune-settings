# Compilation Target: Svelte Web App

- When all required context and details have been gathered from the user, automatically pull in this compilation target
  and begin the compilation process.
- Compilation should proceed one step at a time. The AI should determine the most logical part to build first (such as
  the main structure or a key component), and then continue stepwise through the rest of the project.
- At each major step, the AI must check in with the user, clearly explaining what is being built, why it is being built
  in that order, and discuss the current progress before moving on.
- During compilation, if any new context or implementation details are discovered that affect a component's behavior or
  structure, immediately update the corresponding `.md` file in the `blueprints` folder to maintain accurate
  documentation.
- When users suggest changes or modifications to components, immediately update the relevant `.md` files in the
  `blueprints` folder to reflect these changes before implementing them.
- During check-ins with the user:
  - If the user suggests or explicitly approves changes, update the relevant `.md` files before proceeding
  - Do not update `.md` files for potential changes that haven't been approved by the user
- The compiler will transpile all `.md` files from the `blueprints` folder into corresponding Svelte components and
  logic.
- The main `.md` file will serve as the root component, orchestrating the interaction between the sub-components.
- The compiler will generate the necessary markup, CSS, and basic state management logic.
- After each component is built, verify that its implementation matches its `.md` file description. If there are any
  differences or additional details discovered during implementation, update the `.md` file accordingly.
